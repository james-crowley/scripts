diff --git a/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy
index ad06e19d266..e8701469df0 100644
--- a/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy
+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy
@@ -1033,6 +1033,13 @@ class BuildPlugin implements Plugin<Project> {
                         socketToCore[currentID] = Integer.valueOf(value)
                         currentID = ""
                     }
+		    //check for s390x arch
+		    if (name == "vendor_id") {
+			if (value == "IBM/S390") {
+			    currentID = value
+			    socketToCore[currentID] = findDefaultParallel_s390x()
+			}
+		    }
                 }
             })
             return socketToCore.values().sum()
@@ -1049,6 +1056,44 @@ class BuildPlugin implements Plugin<Project> {
         return Runtime.getRuntime().availableProcessors() / 2
     }
 
+    //calculate no. of physical cpu cores on s390x
+    private static int findDefaultParallel_s390x() {
+	String s = null;
+	int processors = 0;
+	// code to count the  number of Physical cores for s390x
+	try {
+
+	    // run the Unix "lscpu" command
+	    // using the Runtime exec method:
+	    Process p = Runtime.getRuntime().exec("lscpu");
+
+	    BufferedReader stdInput = new BufferedReader(new InputStreamReader(p.getInputStream()));
+	    BufferedReader stdError = new BufferedReader(new InputStreamReader(p.getErrorStream()));
+	    // read the output from the command
+	    while ((s = stdInput.readLine()) != null) {
+		if (s.contains(":")) {
+		    String[] strings = s.split(":");
+		    String name = strings[0], value = strings[1];
+		    if (name.equals("CPU(s)")) {
+			processors = Integer.valueOf(value.trim()).intValue();
+		    }
+		}
+	    }
+
+	    return processors;
+
+	    // read any errors from the attempted command
+	    while ((s = stdError.readLine()) != null) {
+		System.out.println(s);
+	    }
+
+	    System.exit(0);
+	} catch (IOException e) {
+	   e.printStackTrace();
+	   System.exit(-1);
+	}
+    }
+
     private static configurePrecommit(Project project) {
         Task precommit = PrecommitTasks.create(project, true)
         project.check.dependsOn(precommit)
diff --git a/distribution/archives/build.gradle b/distribution/archives/build.gradle
index 7240ee0fbb6..c4eac02cb12 100644
--- a/distribution/archives/build.gradle
+++ b/distribution/archives/build.gradle
@@ -167,25 +167,25 @@ task buildOssNoJdkDarwinTar(type: Tar) {
 
 task buildLinuxTar(type: Tar) {
   configure(commonTarConfig)
-  archiveClassifier = 'linux-x86_64'
+  archiveClassifier = 'linux-s390x'
   with archiveFiles(modulesFiles(false), 'tar', 'linux', false, true)
 }
 
 task buildOssLinuxTar(type: Tar) {
   configure(commonTarConfig)
-  archiveClassifier = 'linux-x86_64'
+  archiveClassifier = 'linux-s390x'
   with archiveFiles(modulesFiles(true), 'tar', 'linux', true, true)
 }
 
 task buildNoJdkLinuxTar(type: Tar) {
   configure(commonTarConfig)
-  archiveClassifier = 'no-jdk-linux-x86_64'
+  archiveClassifier = 'no-jdk-linux-s390x'
   with archiveFiles(modulesFiles(false), 'tar', 'linux', false, false)
 }
 
 task buildOssNoJdkLinuxTar(type: Tar) {
   configure(commonTarConfig)
-  archiveClassifier = 'no-jdk-linux-x86_64'
+  archiveClassifier = 'no-jdk-linux-s390x'
   with archiveFiles(modulesFiles(true), 'tar', 'linux', true, false)
 }
 
diff --git a/distribution/src/config/elasticsearch.yml b/distribution/src/config/elasticsearch.yml
index a87d7f70825..ec19ad55ec8 100644
--- a/distribution/src/config/elasticsearch.yml
+++ b/distribution/src/config/elasticsearch.yml
@@ -86,3 +86,4 @@ ${path.logs}
 # Require explicit names when deleting indices:
 #
 #action.destructive_requires_name: true
+xpack.ml.enabled: false
